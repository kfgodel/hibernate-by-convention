<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ar.com.tenpines</groupId>
    <artifactId>ateam-hibernate</artifactId>
    <version>0.1-SNAPSHOT</version>
    <name>Ateam Hibernate</name>
    <description>Programmatic facade to simplify hibernate usage</description>

    <properties>
        <project.java.source>1.8</project.java.source>
        <project.java.target>1.8</project.java.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <version.plugin.compiler>3.1</version.plugin.compiler>
        <version.plugin.jar>2.4</version.plugin.jar>
        <version.plugin.source>2.2.1</version.plugin.source>
        <version.plugin.eclipse>2.9</version.plugin.eclipse>
        <version.plugin.assembly>2.4</version.plugin.assembly>
        <version.plugin.failsafe>2.17</version.plugin.failsafe>
        <version.plugin.surefire>2.17</version.plugin.surefire>
        <version.plugin.assembly>2.5.3</version.plugin.assembly>
        <version.plugin.shade>2.3</version.plugin.shade>
        <version.plugin.dependency>2.10</version.plugin.dependency>
        <version.plugin.querydsl>1.1.3</version.plugin.querydsl>


        <version.slf4j>1.7.6</version.slf4j>
        <version.logback>1.1.1</version.logback>
        <version.junit>4.11</version.junit>
        <version.testng>6.8.8</version.testng>
        <version.assertj>1.6.1</version.assertj>
        <version.mockito>1.9.5</version.mockito>
        <version.javaspec>2.0</version.javaspec>

        <version.hibernate>4.3.8.Final</version.hibernate>
        <version.reflections>0.9.9</version.reflections>
        <version.joda-time>2.7</version.joda-time>
        <version.querydsl>3.6.2</version.querydsl>
        <version.joda-time-hibernate>1.3</version.joda-time-hibernate>
    </properties>


    <build>


        <plugins>

            <!-- Genera los binarios -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.plugin.compiler}</version>
                <configuration>
                    <source>${project.java.source}</source>
                    <target>${project.java.target}</target>
                    <debug>true</debug>
                    <!-- This parameter enables parameter name preservation -->
                    <compilerArgument>-parameters</compilerArgument>
                </configuration>
            </plugin>

            <!-- Generates Queryable types for querydsl -->
            <plugin>
                <groupId>com.mysema.maven</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <version>${version.plugin.querydsl}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/generated-sources/java</outputDirectory>
                            <processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor</processor>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Attachea los fuentes como jar -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>${version.plugin.source}</version>
                <executions>
                    <execution>
                        <id>attach-source</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 1ยบ Los empaqueta en jars -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${version.plugin.jar}</version>
                <configuration>
                    <!-- Needed to match container expected jar file -->
                    <finalName>executable-app</finalName>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                        </manifest>
                        <manifestEntries>
                            <Build-JVM>${java.vm.name} - ${java.vm.vendor}</Build-JVM>
                            <Build-OS>${os.name} - Version: ${os.version}</Build-OS>
                            <Application-GroupId>${project.groupId}</Application-GroupId>
                            <Application-Artifact>${project.artifactId}</Application-Artifact>
                            <Application-Version>${project.version}</Application-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <dependencies>


        <!-- Object persistence -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${version.hibernate}</version>
            <exclusions>
                <!-- Avoid conflict with reflections -->
                <exclusion>
                    <groupId>org.javassist</groupId>
                    <artifactId>javassist</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-c3p0</artifactId>
            <version>${version.hibernate}</version>
        </dependency>

        <!-- programmatic dsl for queries -->
        <dependency>
            <groupId>com.mysema.querydsl</groupId>
            <artifactId>querydsl-apt</artifactId>
            <version>${version.querydsl}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.mysema.querydsl</groupId>
            <artifactId>querydsl-jpa</artifactId>
            <version>${version.querydsl}</version>
        </dependency>

        <!-- Discover persistent classes dynamically -->
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>${version.reflections}</version>
        </dependency>

        <!-- Nary: Stream and optional -->
        <dependency>
            <groupId>ar.com.kfgodel</groupId>
            <artifactId>nary</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- Time representations -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${version.joda-time}</version>
        </dependency>
        <dependency>
            <!-- Add support to persist joda time objects -->
            <groupId>org.jadira.usertype</groupId>
            <artifactId>usertype.core</artifactId>
            <version>3.2.0.GA</version>
            <!-- We only want persistent date types-->
            <exclusions>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-entitymanager</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Follow knwon conventions -->
        <dependency>
            <groupId>ar.com.kfgodel</groupId>
            <artifactId>by-convention</artifactId>
            <version>0.1-SNAPSHOT</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${version.slf4j}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${version.slf4j}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${version.slf4j}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${version.logback}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${version.logback}</version>
            <scope>test</scope>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>

        <!-- Nice assertions -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${version.assertj}</version>
            <scope>test</scope>
        </dependency>

        <!-- Spec for testing -->
        <dependency>
            <groupId>ar.com.dgarcia</groupId>
            <artifactId>java-spec</artifactId>
            <version>${version.javaspec}</version>
            <scope>test</scope>
        </dependency>

        <!-- Mock for testing -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${version.mockito}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>


    <repositories>
        <repository>
            <!-- Repo oficial de tenpines (no deberรญan ser necesarios otros) -->
            <id>tenpines_repo</id>
            <name>Repositorio 10pines</name>
            <url>http://services.10pines.com:8081/artifactory/repo</url>
            <releases>
                <!-- Queremos que no actualice los jars que ya tienen releas -->
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <!-- Queremos que siempre busque snapshots neuvos -->
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <!-- Mismo repo pero para la parte de plugins de maven -->
            <id>tenpines_plugin_repo</id>
            <name>Repositorio 10pines</name>
            <url>http://services.10pines.com:8081/artifactory/repo</url>
            <releases>
                <!-- Queremos que no actualice los jars que ya tienen releas -->
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <!-- Queremos que siempre busque snapshots neuvos -->
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <repository>
            <id>kfgodel_mosquito</id>
            <name>Internal Releases</name>
            <url>http://kfgodel.info:8081/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>kfgodel_mosquito</id>
            <name>Internal Snapshots</name>
            <url>http://kfgodel.info:8081/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>
